version: '3.8'

services:
  # Servidor Web Nginx com SSL
  webserver:
    image: nginx:alpine
    container_name: dev_webserver
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx-simple.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./www:/var/www/html
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - php
    networks:
      - dev-network

  # PHP-FPM Simplificado
  php:
    image: php:8.2-fpm-alpine
    container_name: dev_php
    restart: unless-stopped
    volumes:
      - ./www:/var/www/html
      - ./php/php-simple.ini:/usr/local/etc/php/php.ini
    command: >
      sh -c "apk add --no-cache postgresql-dev mysql-dev libpng-dev libjpeg-turbo-dev freetype-dev &&
             docker-php-ext-install pdo pdo_mysql pdo_pgsql gd &&
             php-fpm"
    networks:
      - dev-network

  # MySQL
  mysql:
    image: mysql:8.0
    container_name: dev_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: devdb
      MYSQL_USER: devuser
      MYSQL_PASSWORD: devpassword
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - dev-network

  # phpMyAdmin
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: dev_phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: mysql
      PMA_USER: root
      PMA_PASSWORD: rootpassword
      UPLOAD_LIMIT: 100M
    ports:
      - "8080:80"
    depends_on:
      - mysql
    networks:
      - dev-network

  # PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: dev_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: devdb
      POSTGRES_USER: devuser
      POSTGRES_PASSWORD: devpassword
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - dev-network

  # pgAdmin
  pgadmin:
    image: dpage/pgadmin4
    container_name: dev_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@dev.local
      PGADMIN_DEFAULT_PASSWORD: adminpassword
    ports:
      - "8081:80"
    depends_on:
      - postgres
    networks:
      - dev-network

  # Python Simplificado
  python:
    image: python:3.11-slim
    container_name: dev_python
    restart: unless-stopped
    volumes:
      - ./python/projects:/app
      - ./www:/var/www/html
    ports:
      - "8000:8000"
      - "5000:5000"
      - "8888:8888"
    working_dir: /app
    command: >
      sh -c "pip install django flask fastapi uvicorn jupyter pandas requests &&
             tail -f /dev/null"
    networks:
      - dev-network

  # FTP Server
  ftp:
    image: delfer/alpine-ftp-server
    container_name: dev_ftp
    restart: unless-stopped
    environment:
      USERS: "devuser|devpassword|/ftp/devuser"
      ADDRESS: ftp
    ports:
      - "21:21"
      - "21000-21010:21000-21010"
    volumes:
      - ./ftp:/ftp
      - ./www:/ftp/devuser/www
    networks:
      - dev-network

  # Interface gr√°fica para FTP (FileManager)
  filemanager:
    image: filebrowser/filebrowser
    container_name: dev_filemanager
    restart: unless-stopped
    ports:
      - "8083:80"
    volumes:
      - ./ftp:/srv
      - ./filemanager/filebrowser.db:/database/filebrowser.db
      - ./filemanager/settings.json:/config/settings.json
    command: --config /config/settings.json
    networks:
      - dev-network

volumes:
  mysql_data:
  postgres_data:

networks:
  dev-network:
    driver: bridge
